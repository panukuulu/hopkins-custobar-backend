"""Add external_id name changes 3

Revision ID: 906dc41f5f0c
Revises: 37667120c20a
Create Date: 2024-11-25 15:38:43.226622

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '906dc41f5f0c'
down_revision = '37667120c20a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First, we add cb_id as a nullable field
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cb_id', sa.String(), nullable=True))  # temporary nullable to avoid conflict
        batch_op.drop_constraint('uq_external_id', type_='unique')
        batch_op.create_unique_constraint('uq_customers_cb_id', ['cb_id'])
        batch_op.drop_column('external_id')

    # Now, populate cb_id with the data from external_id (so that it's unique)
    op.execute("UPDATE customers SET cb_id = external_id")

    # After updating cb_id, we ensure it's not nullable
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.alter_column('cb_id', nullable=False)  # Now cb_id is not nullable

    # Modify events table
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cb_id', sa.String(), nullable=False))
        batch_op.drop_constraint('fk_event_customer', type_='foreignkey')
        # Create a foreign key constraint with a name
        batch_op.create_foreign_key('fk_events_customer_cb_id', 'customers', ['cb_id'], ['cb_id'])
        batch_op.drop_column('customer_id')

    # Modify transactions table
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cb_id', sa.String(), nullable=False))
        batch_op.drop_constraint('uq_transaction_sale_external_id', type_='unique')
        batch_op.drop_constraint('fk_transaction_customer', type_='foreignkey')
        # Create a foreign key constraint with a name
        batch_op.create_foreign_key('fk_transactions_customer_cb_id', 'customers', ['cb_id'], ['cb_id'])
        batch_op.drop_column('customer_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('customer_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint('fk_transactions_customer_cb_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_transaction_customer', 'customers', ['customer_id'], ['id'])
        batch_op.create_unique_constraint('uq_transaction_sale_external_id', ['sale_external_id'])
        batch_op.drop_column('cb_id')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('customer_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint('fk_events_customer_cb_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_event_customer', 'customers', ['customer_id'], ['id'])
        batch_op.drop_column('cb_id')

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('external_id', sa.VARCHAR(), nullable=False))
        batch_op.drop_constraint('uq_customers_cb_id', type_='unique')
        batch_op.create_unique_constraint('uq_external_id', ['external_id'])
        batch_op.drop_column('cb_id')

    # ### end Alembic commands ###
