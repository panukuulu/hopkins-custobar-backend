"""Add external_id to customers table

Revision ID: c3c70c48321a
Revises: 
Create Date: 2024-11-25 13:56:28.272551

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'c3c70c48321a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('external_id', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('last_purchase_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_action_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('can_email', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('custobar_integration_id', sa.Integer(), nullable=False))

        # Adding Unique Constraint for 'external_id'
        batch_op.create_unique_constraint('uq_external_id', ['external_id'])
        
        # Adding Foreign Key Constraint for 'custobar_integration_id'
        batch_op.create_foreign_key('fk_custobar_integration', 'custobar_integrations', ['custobar_integration_id'], ['id'])

        # Dropping columns that are no longer needed
        batch_op.drop_column('marketing_consent')
        batch_op.drop_column('last_active_date')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('additional_data', sa.JSON(), nullable=True))
        batch_op.alter_column('customer_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.create_foreign_key('fk_event_customer', 'customers', ['customer_id'], ['id'])
        batch_op.drop_column('product_id')
        batch_op.drop_column('utm_source')
        batch_op.drop_column('reason')
        batch_op.drop_column('tags')
        batch_op.drop_column('event_date')

    with op.batch_alter_table('metrics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('active_customers', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('new_customers', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('passive_customers', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('avg_purchase_revenue_per_customer', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('avg_purchase_revenue_per_active_customer', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('avg_purchase_size', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('visitors_website_from_customers', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('customer_lifetime_value_overall', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('customer_lifetime_value_active_customers', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('open_rate', sa.Numeric(precision=5, scale=2), nullable=True))
        batch_op.add_column(sa.Column('click_rate', sa.Numeric(precision=5, scale=2), nullable=True))
        batch_op.add_column(sa.Column('conversion_rate', sa.Numeric(precision=5, scale=2), nullable=True))
        batch_op.add_column(sa.Column('opt_outs', sa.Integer(), nullable=True))
        batch_op.alter_column('campaign_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=True)
        batch_op.drop_column('transactions_count')
        batch_op.drop_column('active_customers_count')
        batch_op.drop_column('new_customers_count')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('revenue', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('action_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('custobar_integration_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key('fk_transaction_integration', 'custobar_integrations', ['custobar_integration_id'], ['id'])
        batch_op.drop_column('timestamp')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', sa.DATETIME(), nullable=True))
        batch_op.drop_constraint('fk_transaction_integration', type_='foreignkey')
        batch_op.drop_column('custobar_integration_id')
        batch_op.drop_column('action_type')
        batch_op.drop_column('revenue')

    with op.batch_alter_table('metrics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('new_customers_count', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('active_customers_count', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('transactions_count', sa.INTEGER(), nullable=True))
        batch_op.alter_column('campaign_type',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_column('opt_outs')
        batch_op.drop_column('conversion_rate')
        batch_op.drop_column('click_rate')
        batch_op.drop_column('open_rate')
        batch_op.drop_column('customer_lifetime_value_active_customers')
        batch_op.drop_column('customer_lifetime_value_overall')
        batch_op.drop_column('visitors_website_from_customers')
        batch_op.drop_column('avg_purchase_size')
        batch_op.drop_column('avg_purchase_revenue_per_active_customer')
        batch_op.drop_column('avg_purchase_revenue_per_customer')
        batch_op.drop_column('passive_customers')
        batch_op.drop_column('new_customers')
        batch_op.drop_column('active_customers')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_date', sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column('tags', sqlite.JSON(), nullable=True))
        batch_op.add_column(sa.Column('reason', sa.VARCHAR(), nullable=True))
        batch_op.add_column(sa.Column('utm_source', sa.VARCHAR(), nullable=True))
        batch_op.add_column(sa.Column('product_id', sa.VARCHAR(), nullable=True))
        batch_op.drop_constraint('fk_event_customer', type_='foreignkey')
        batch_op.alter_column('customer_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('additional_data')
        batch_op.drop_column('date')

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_active_date', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('marketing_consent', sa.BOOLEAN(), nullable=True))
        batch_op.drop_constraint('fk_custobar_integration', type_='foreignkey')
        batch_op.drop_constraint('uq_external_id', type_='unique')
        batch_op.drop_column('custobar_integration_id')
        batch_op.drop_column('can_email')
        batch_op.drop_column('last_action_date')
        batch_op.drop_column('last_purchase_date')
        batch_op.drop_column('external_id')

    # ### end Alembic commands ###
